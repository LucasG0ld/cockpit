id: "TASK-IAM-FE-ORG-002-MembersTable"
title: "FEAT(organism): MembersTable (liste membres filtrée orgId)"
status: "planned"
priority: "P0"
labels: ["[frontend]", "[organisms]", "[tables]"]
dependencies: ["TASK-IAM-BE-003-Tenant-Enforcement", "TASK-IAM-BE-002-Auth-Guard"]
created: "2025-10-01"
---

### 1. High-Level Objective
Tableau des membres de l'organisation, avec colonnes statut/role et actions.

### 2. Background / Context (Optionnel mais recommandé)
PRD §5: filtrage serveur par `orgId`.

### 3. Assumptions & Constraints
-   **ASSUMPTION:** Pagination simple côté backend.

### 4. Dependencies (Autres Tâches ou Artefacts)
-   **Tasks:** `TASK-IAM-BE-003-Tenant-Enforcement`, `TASK-IAM-BE-002-Auth-Guard`

### 5. Context Plan
-   **BEGIN (add to model context):**
    - `apps/frontend/src/app/globals.css` (read-only)
-   **END STATE (must exist after completion):**
    - `apps/frontend/src/components/organisms/MembersTable.tsx`

### 6. Low-Level Steps (Ordonnés et denses en information)
1.  **FETCH** liste membres.
2.  **RENDER** colonnes: email, rôle, statut, actions.
3.  **USE** `RoleBadge` et `StatusBadge`.

### 7. Acceptance Criteria
-   [ ] Liste affichée et filtrée côté serveur par `orgId`.
