---
task_id: "[TASK-ID]"
status: "completed" | "partial" | "blocked"
date: "[YYYY-MM-DD]"
---

**Localisation :** Ce rapport doit être sauvegardé dans `execution_reports/feature-[feature-id]/`

# Rapport : [Titre de la tâche]

## 1. Résumé
[2-3 phrases décrivant le travail effectué]

## 2. Livrables (Code Créé)

### Fichiers Créés
- `[chemin/fichier]`

### Fichiers Modifiés
- `[chemin/fichier]`

### Contenu du code généré
```[lang]
[code]
```

## 3. Acceptance Criteria
- [ ] Critère 1
- [ ] Critère 2

## 4. Tests
[Décris les tests implémentés]

## 5. Tests Manuels

**Instructions pour valider manuellement cette tâche :**

[Décris les étapes précises que l'opérateur doit suivre pour tester la fonctionnalité]

**Exemple :**
1. Ouvre l'application dans le navigateur
2. [Action à effectuer]
3. [Résultat attendu]

**Note :** Si la tâche n'est pas testable manuellement (ex: types TypeScript), indique "Non applicable - tâche purement structurelle".

## 6. Décisions Techniques
[Explique les choix importants]

## 7. ADR Créés
[Liste des ADR]

## 8. Blocages & Questions
[Problèmes rencontrés]

## 9. Risques, Dépendances & Observations
- [Décrire ici tout risque externe, dépendance vieillissante, ou observation pertinente qui n'est pas une dette technique directe logguée dans le code. Exemple : dépréciation d'une librairie, découverte d'une limitation d'API, etc.]

## 10. [TECH_DEBT] Logguée
- *Cette section liste uniquement les dettes techniques signalées via un commentaire `// [TECH_DEBT]` directement dans le code, conformément à la doctrine "No Broken Windows".*
- `[fichier:ligne]` - Description du problème.
