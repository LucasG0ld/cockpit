# Protocole de Modification de Plan Technique


**Introduction :** Ce protocole est le seul moyen autorisé pour modifier un plan de travail après sa création initiale (via le workflow C). Il garantit que le plan stratégique (`_plan.md`) et les tâches détaillées (`/tasks/*.mdc`) restent parfaitement synchronisés.

---
---
**DOCTRINE FONDAMENTALE (À inclure dans tous les workflows)**

1.  **"No Broken Windows" :** Si tu trouves une imperfection dans le code qui est hors du périmètre de ta mission, ne la corrige pas. Dans ton rapport final, signale-la dans une section dédiée `[TECH_DEBT]` pour qu'un humain puisse créer la tâche correspondante.

2.  **"Obedience with Insight" :** Ton rôle n'est pas l'obéissance aveugle. Si une exigence de ta mission te semble ambiguë, techniquement irréalisable ou contradictoire avec un document parent (un `ADR`, le `PRD Global`), ton devoir est de le signaler immédiatement.

3.  **"Prove, then Document" :** Le code n'existe pas sans preuve (tests). La preuve n'a de valeur que si elle est contextualisée par une décision d'architecture documentée (`ADR`) si nécessaire.

4.  **"Principe de la Remontée en Cascade" :** Si tu es bloqué par une ambiguïté dans la spécification, signale que le problème doit être corrigé à la source (ex: dans le `PRD Feature` parent) avant de continuer. Ne fais pas de suppositions.

5.  **"Primacy of the Strategic Plan" :** Le plan stratégique (`_plan.md`) est la source de vérité absolue pour la structure et la séquence du travail. Tu ne dois **JAMAIS** modifier cette structure de ta propre initiative (ne pas créer, supprimer ou modifier une tâche "à la volée"). Si, au cours de ton travail, tu identifies une modification nécessaire (une tâche manquante, une dépendance incorrecte), ton devoir est de **STOPPER** ton processus actuel, de **signaler** la modification requise et de recommander son implémentation. Attends ensuite que l'opérateur humain lance le `Workflow E` (Modification de Plan) pour appliquer formellement le changement.
---
---

#### **Phase 1 : Briefing de la Demande de Changement**

1.  **Instruction Humaine :** L'opérateur exprime clairement le changement souhaité ou valide la proposition de changement que tu as faite. (ex: "Lançons le Workflow E pour ajouter une tâche de caching", ou "Ta proposition de nouvelle tâche est validée, lançons le Workflow E pour l'implémenter.").
2.  **Assimilation du Contexte :** Charge le plan stratégique actuel (`annex/[version]/[nom-de-l-epique]/_plan.md`) et les fichiers `task.mdc` concernés par la demande de changement.

---
#### **Phase 2 : Analyse d'Impact et Proposition de Modification du Plan Stratégique**

1.  **Analyse d'Impact :** Analyse les conséquences du changement demandé sur le graphe de dépendances existant et sur les autres tâches.
2.  **Proposition de Modification (sur `_plan.md` uniquement) :** Présente une proposition de modification **uniquement pour le fichier `_plan.md`**.
    *   Utilise un format `AVANT` / `APRÈS` pour montrer clairement les changements sur le graphe Mermaid et la liste des tâches.
    *   Justifie brièvement pourquoi le changement est nécessaire et comment il s'intègre dans le plan existant.

**[POINT DE CONTRÔLE HUMAIN N°1 - VALIDATION STRATÉGIQUE]**
**STOP.** Soumets ta proposition de mise à jour du plan stratégique. L'opérateur humain valide que le changement est correct au niveau macro avant toute modification.

---
#### **Phase 3 : Application et Propagation des Changements**

1.  **Instruction Humaine :** "La proposition est validée. Applique et propage les changements."
2.  **Action (Étape 1 - Mise à Jour du Plan Stratégique) :**
    *   Applique les modifications validées directement dans le fichier `annex/[version]/[nom-de-l-epique]/_plan.md`.

3.  **Action (Étape 2 - Propagation aux Tâches Détaillées) :**
    *   En te basant sur le `_plan.md` fraîchement mis à jour, effectue les opérations nécessaires sur le système de fichiers :
        *   **Si une tâche a été ajoutée :** Crée un nouveau fichier `task.mdc` dans `/tasks/` en utilisant le template `@.cursor/rules/templates/task.template.mdc`.
        *   **Si une tâche a été modifiée :** Met à jour le fichier `task.mdc` correspondant (ex: modification du champ `dependencies`, mise à jour des `Low-Level Steps`).
        *   **Si une tâche a été supprimée :** Supprime le fichier `task.mdc` correspondant du dossier `/tasks/`.

---
#### **Phase 4 : Confirmation de la Synchronisation**

1.  **Confirmation de l'IA :** Produis un rapport final concis confirmant les actions effectuées.
    *   **Exemple :** "Synchronisation terminée. Le fichier `_plan.md` a été mis à jour. Le fichier `TASK-XXX.mdc` a été créé et le fichier `TASK-YYY.mdc` a été modifié pour refléter les nouvelles dépendances. Les deux sources de vérité sont de nouveau parfaitement synchronisées."

**[POINT DE CONTRÔLE HUMAIN N°2 - FIN DE PROCÉDURE]**
La modification est terminée et documentée.
